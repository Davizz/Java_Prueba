package F22;

public class Funciones {
	
	/* Ej F22_1: Abstracci√≥n y personajes de fantas√≠a 
		Quiero que programes un mini juego con todo lo que hemos visto hasta ahora. Bucles, Array, Listas, Condicionales, POO, Uso de clases de la API, ‚Ä¶
		Es importante que intentes implementar por ti mismo las reglas del juego. Pero tienes que comentar tu c√≥digo para aclarar tus l√≠neas de c√≥digo y ayudar los lectores de tus clases a entender mejor tus intenciones. No pasa nada si te pasas y si lo haces como si fu√©semos unos tontos. üòâ No dudes en copiar/pegar los contenidos de esta tarea a tus clases y a adaptar tus propias reglas. Yo te voy a proponer un guion para que lo puedas desarrollar, pero puedes salirte de este guion si lo juzgas mejor. Lo √∫nico que tienes que hacer en este caso es explicar tus nuevas reglas, motivos y elecciones. 
		¬°¬°Vayamos al grano!! 
		Para empezar, debes de crear una clase abstracta llamada Personaje. Esta clase contiene los m√©todos lucha(), corre() y nada(). Todos devuelven un resultado entero.
		A continuaci√≥n, a√±adir√°s las propiedades siguientes: nombre, raza, 3 caracter√≠sticas fuerza, agilidad y percepci√≥n, la iniciativa, el factor de armadura y los puntos de vida. Con sus getters setters y su m√©todo toString. Nada de abstracci√≥n en estos casos. 
		Las caracter√≠sticas pueden ir de 3 a 24. Se calculan lanzando 2 dados de 6 caras normales y 1 especial (tambi√©n de 6 caras) seg√∫n el funcionamiento siguiente: 
		Lanzando los dados, l√≥gicamente obtendr√°s un resultado comprendido entre 3 y 18. Pero, si el resultado obtenido con el dado especial es igual a 6, se a√±ade el valor de un dado de 6 extra al resultado final. Para conseguir realizar esto, tendr√°s que usar m√©todos que represente la acci√≥n de lanzar un dado. Puede que pienses tambi√©n en crear una clase a parte ya que seguiremos usando dados m√°s tarde en el main. 
		Los puntos de vida (PV) se obtienen calculando la media de las 3 caracter√≠sticas redondeas al superior. 
		El factor de armadura es un n√∫mero comprendido entre 0 y 6. Representa la protecci√≥n que le da una armadura a un h√©roe. Siendo 0 ninguna armadura y 6 una armadura muy gruesa y resistente. 
		La iniciativa se obtiene calculando la media de las 3 caracter√≠sticas al que hay que restar el factor de armadura. 
		Despu√©s tienes que crear tres clases que heredan de Personaje. Cada clase lleva el nombre de un oficio de personaje de fantas√≠a (una clase para los jugadores de juegos de rol). Pudiendo ser lo que quieras: Caballero, Guerrero, Espadach√≠n, Jinete, Montaraz, Ladron‚Ä¶ 
		
		Cada uno de ellos implementar√° los m√©todos de la clase Personaje de una forma especial teniendo en cuenta por ejemplo que: 
		el jinete es el m√°s r√°pido de todos. Puede que reciba alg√∫n bonus en la ejecuci√≥n del m√©todo corre. 
		el caballero es el m√°s eficiente en lucha cuerpo a cuerpo. Es un personaje que dispone de la protecci√≥n m√°s elevada. Eso har√° que no pueda nadar ya que el peso de su armadura se lo impide. 
		En el main, debes instanciar 3 heroes, hacerles participar a pruebas de lucha, de nataci√≥n y de carrera y sacar por pantalla una presentaci√≥n detallada de cada h√©roe y darnos una idea de quien ha sido el vencedor de cada prueba con la puntuaci√≥n de cada uno. 
		Adem√°s, para la prueba de la lucha puedes imaginar un combate entre 2 luchadores: Eres libre de implementar una forma de resolver el combate. Pero puedes tener en cuenta los elementos siguientes: 
		El asalto se calcula sumando un par de dados de 6 a la iniciativa del asaltante. 
		El resultado m√°s alto determina el que hace da√±o al otro. 
		Los da√±os se pueden determinar con un dado de 6 sumado a la fuerza del atacante. 
		Se resta el factor de armadura a los da√±os y se obtiene los da√±os finales. 
		Se resta los da√±os finales a los puntos de vida. 
		En caso de tener m√°s de 0 PV, la lucha continua hasta que los PV de un luchador lleguen a 0 o menos.  
		En mi propuesta, la suerte interviene en el combate. Pero no demasiado teniendo en cuenta que la iniciativa es un valor que est√° comprendido entre 3 y 24 y que los dos datos dan entre 2 y 12.  
		Para realizar esta tarea, encontrar√°s seguramente problemas para acceder a los m√©todos de cada uno de los personajes. Ten en cuenta que las subclases heredan las propiedades y m√©todos de la superclase pero que la superclase no tiene acceso a los m√©todos de las subclases. 
	 */
	public void F22_1() {
		
	}
	
	
}

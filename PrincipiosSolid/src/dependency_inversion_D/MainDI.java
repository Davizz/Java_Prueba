package dependency_inversion_D;

/**
 * Este principio especifica cómo deben ser las relaciones entre componentes
 * para evitar el acoplamiento entre los distintos módulos de un software.
 * 
 * @author Usuario
 *
 */
public class MainDI {
	/**
	 * 
	 * S O L I Dependency Inversion
	 * 
	 * ETAPA __09 Aplicando el principio de inversión de dependencias conseguimos
	 * que las clases de alto nivel no trabajen directamente con las clases de bajo
	 * nivel, para ello se utiliza interfaces que crean una capa abstracta
	 * intermedia entre ambos componentes, otorgando a la arquitectura de nuestra
	 * aplicación mayor flexibilidad y menor acoplamiento, características que a
	 * largo plazo pueden ser muy interesantes para la mantenibilidad de nuestro
	 * software.
	 * 
	 * ETAPA __010 El principio de inversión de dependencias es el último de esta
	 * serie de post sobre los principios SOLID, después de repasar todos ellos
	 * podemos comprobar que todos los principios están estrechamente relacionados
	 * entre sí y que la aplicación de algunos de ellos facilita la aplicación de
	 * los siguientes, ya que todos tienen como objetivo la realización de un código
	 * limpio, el resultado será un software con menor acoplamiento, más flexible,
	 * más estable, más fácil de mantener y de escalar.
	 * 
	 */
}
